#
#	$NetBSD$
#
#	LicheePI Zero
#

include	"arch/evbarm/conf/std.generic"
include	"arch/evbarm/conf/GENERIC.common"

include "arch/arm/pic/files.pic"
include "arch/arm/cortex/files.cortex"

include "arch/evbarm/conf/files.fdt"

file    arch/arm/arm32/arm32_boot.c
file    arch/arm/arm32/arm32_kvminit.c
file    arch/arm/arm32/arm32_reboot.c
file    arch/arm/arm32/irq_dispatch.S
file    arch/arm/arm32/armv7_generic_space.c
file    arch/arm/arm/arm_generic_dma.c
file    arch/arm/arm/bus_space_a4x.S

# Add other board files here
include "arch/arm/acpi/files.acpi"
include "arch/arm/sunxi/files.sunxi"

# Stack-less Just-In-Time compiler
include "external/bsd/sljit/conf/files.sljit"

options 	CPU_CORTEX

options 	SOC_SUN8I_V3S

pseudo-device 	openfirm	# /dev/openfirm

#options 	DIAGNOSTIC	# internal consistency checks
#options 	DEBUG
#options 	LOCKDEBUG
#options 	UVMHIST		# kernhist for uvm/pmap subsystems
#options 	PCI_CONFIG_DUMP	# verbosely dump PCI config space

options 	MSGBUFSIZE=32768

#options 	VERBOSE_INIT_ARM # verbose bootstrapping messages

# EARLYCONS is required for early init messages from VERBOSE_INIT_ARM.

#options 	EARLYCONS=sunxi, CONSADDR=0x01c28000

# Kernel Undefined Behavior Sanitizer (kUBSan). Use UBSAN_ALWAYS_FATAL
# if you want panics instead of warnings.
#options 	KUBSAN			# mandatory
#options 	UBSAN_ALWAYS_FATAL	# optional

# Kernel Address Sanitizer (kASan). The quarantine is optional and can
# help KASAN find more use-after-frees. Use KASAN_PANIC if you want panics
# instead of warnings.
#makeoptions 	KASAN=1		# mandatory
#options 	KASAN		# mandatory
#options 	POOL_QUARANTINE	# optional
#options 	KASAN_PANIC	# optional

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
#options 	ACPIVERBOSE	# verbose ACPI configuration messages
#options 	MIIVERBOSE	# verbose PHY autoconfig messages
#options 	PCIVERBOSE	# verbose PCI device autoconfig messages
#options 	PCMCIAVERBOSE	# verbose PCMCIA configuration messages
#options 	SCSIVERBOSE	# human readable SCSI error messages
#options 	USBVERBOSE	# verbose USB device autoconfig messages

makeoptions 	DEBUG="-g"	# compile full symbol table
makeoptions 	COPY_SYMTAB=1

config		netbsd		root on ? type ?

# EFI runtime support
options 	EFI_RUNTIME
#pseudo-device	efi		# /dev/efi

# Device tree support
armfdt0		at root
simplebus*	at fdt? pass 0

# CPUs
cpus*		at fdt? pass 0
cpu*		at fdt? pass 0

# CPU frequency scaling
cpufreqdt* 	at cpu?

# Power State Coordination Interface (PSCI)
psci* 		at fdt?

# Clock and reset controllers
sun8iv3sccu* 	at fdt? pass 2		# Allwinner V3s CCU
sunxide2ccu*	at fdt? pass 3		# Allwinner DE2 clock controller

fclock* 	at fdt? pass 1
fregulator* 	at fdt? pass 5
gpiokeys* 	at fdt?
wskbd* 		at gpiokeys? console ? mux 1
gpioleds* 	at fdt?

# SRAM controller
sunxisramc* 	at fdt? pass 4		# SRAM controller

# Timer
gtmr* 		at fdt? pass 1		# ARM Generic Timer
armgtmr0 	at gtmr?
sunxihstimer* 	at fdt?			# Allwinner High-Speed timer

# Watchdog
sunxiwdt* 	at fdt?			# Allwinner watchdog

# Interrupt controller
gic* 		at fdt? pass 1		# ARM GIC
armgic0 	at gic?
sunxinmi* 	at fdt? pass 2		# Allwinner NMI / R_INTC

# DMA controller
sun6idma* 	at fdt?	pass 4		# Allwinner DMA controller (sun6i)

# GPIO controller
sunxigpio* 	at fdt? pass 3		# Allwinner GPIO
gpio* 		at gpiobus?

# PWM controller
sunxipwm* 	at fdt? pass 3		# Allwinner PWM

# Backlight
pwmbacklight* 	at fdt?			# PWM Backlight controls

# Fan
pwmfan* 	at fdt?			# PWM Fan controls

# PCIE
pcihost* 	at fdt?			# Generic PCI host controller
pci* 		at pcibus?
ppb* 		at pci? dev ? function ?
pci* 		at ppb?

# Ethernet
emac* 		at fdt?			# Allwinner Fast/Gigabit Ethernet (EMAC)

# MII/PHY support
ukphy* 		at mii? phy ?		# generic unknown PHYs

# UART
com* 		at fdt?	pass 4		# UART

# I2C controllers
options 	I2C_MAX_ADDR=0xfff
sunxitwi* 	at fdt?			# Allwinner TWI
iic* 		at i2cbus?

# I2C devices
si70xxtemp*	at iic? addr 0x40	# SI70XX/HTU21D/SHT21 sensor

# SPI
sun6ispi* 	at fdt?
spi* 		at spibus?

# SPI NOR-Flash
spiflash* 	at spiflashbus?
m25p* 		at spi? slave ?

# Random number generators
sun8icrypto* 	at fdt?			# Allwinner Crypto Engine

# Low res ADC
sunxilradc* 	at fdt?

# RTC
sunxirtc* 	at fdt?			# Allwinner RTC

# Thermal sensor
#sunxithermal* 	at fdt?			# Thermal sensor controller

# Audio
v3scodec* 	at fdt?			# Allwinner V3s audio codec (analog part)
sunxicodec* 	at fdt?			# Allwinner audio codec
sunxii2s* 	at fdt?			# I2S/PCM
audio* 		at audiobus?
spkr* 		at audio?

# SDMMC
sunximmc* 	at fdt?			# Allwinner SD/MMC
sdmmc* 		at sdmmcbus?
ld0 		at sdmmc0
ld1 		at sdmmc1
ld2 		at sdmmc2
ld3 		at sdmmc3
ld* 		at sdmmc?
#bwfm* 		at sdmmc?		# Broadcom BCM43xxx WiFi Interface

# NAND Flash
sunxinand* 	at fdt?			# Allwinner NAND flash controller
nand* 		at nandbus?
flash* 		at nand? dynamic 1

# Display
panel*		at fdt?			# Display panels
sunxide2bus*	at fdt? pass 4		# Allwinner DE2 bus
sunxidrm*	at fdt?	pass 5		# Allwinner Display Pipeline
sunxifb*	at sunxidrm?		# Allwinner DRM framebuffer
sunxilcdc*	at fdt?			# Allwinner DE2 timing controller
sunximixer*	at fdt?			# Allwinner DE2 mixer
genfb* 		at fdt?			# Simple Framebuffer
wsdisplay* 	at wsemuldisplaydev?

options 	VCONS_DRAW_INTR
options 	WSEMUL_VT100
options 	WSDISPLAY_CUSTOM_OUTPUT
options 	WS_DEFAULT_FG=WSCOL_WHITE
options 	WS_DEFAULT_BG=WSCOL_BLACK
options 	WS_KERNEL_FG=WSCOL_GREEN
options 	WS_KERNEL_BG=WSCOL_BLACK
options 	WSDISPLAY_COMPAT_PCVT
options 	WSDISPLAY_COMPAT_SYSCONS
options 	WSDISPLAY_COMPAT_USL
options 	WSDISPLAY_COMPAT_RAWKBD
options 	WSDISPLAY_DEFAULTSCREENS=4
options 	WSDISPLAY_MULTICONS
options 	WSDISPLAY_SCROLLSUPPORT
pseudo-device	wsmux
pseudo-device	wsfont
options 	FONT_BOLD8x16
options 	FONT_BOLD16x32

# Touch Screen controller
sunxits* 	at fdt?			# Touch Screen controller
wsmouse* 	at sunxits? mux 0

# USB
sunxiusbphy* 	at fdt? pass 9		# Allwinner USB PHY
ehci* 		at fdt?			# EHCI
motg* 		at fdt?			# Mentor Graphics USB OTG
ohci* 		at fdt?			# OHCI
usb* 		at usbus?

# SCSI
scsibus* at scsi?
sd* 		at scsibus? target ? lun ?	# SCSI disks

include "dev/usb/usbdevices.config"
midi* 		at midibus?
pseudo-device	sequencer			# MIDI sequencer

# Bluetooth USB Controllers
ubt* at uhub? port ?

# Bluetooth Device Hub
bthub* at bcsp?
bthub* at btuart?
bthub* at bthfive?
bthub* at ubt?

include "dev/bluetooth/bluetoothdevices.config"

cinclude "arch/evbarm/conf/GENERIC.local"
